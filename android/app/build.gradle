plugins {
    id 'com.android.application'
    id 'com.google.gms.google-services' apply false
}

android {
    namespace "io.ionic.com"
    compileSdkVersion rootProject.ext.compileSdkVersion

    defaultConfig {
        applicationId "io.ionic.com"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        manifestPlaceholders = [appAuthRedirectScheme: "capacitor"]
        manifestPlaceholders = [appAuthRedirectScheme: "capacitor"]
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        aaptOptions {
            ignoreAssetsPattern '!.svn:!.git:!.ds_store:!*.scc:.*:!CVS:!thumbs.db:!picasa.ini:!*~'
        }
    }

    buildFeatures {
        viewBinding true
        dataBinding true
    }

    signingConfigs {
        debug {
            storeFile file(project.hasProperty("debugKeystoreStoreFile") ? project.property("debugKeystoreStoreFile") : "C:/Users/ondra/.android/debug.keystore")
            keyAlias project.hasProperty("debugKeystoreKeyAlias") ? project.property("debugKeystoreKeyAlias") : "androiddebugkey"
            storePassword project.hasProperty("debugKeystoreStorePassword") ? project.property("debugKeystoreStorePassword") : "android"
            keyPassword project.hasProperty("debugKeystoreKeyPassword") ? project.property("debugKeystoreKeyPassword") : "android"
        }
        release {
            storeFile file(project.hasProperty("releaseKeystoreStoreFile") ? project.property("releaseKeystoreStoreFile") : "release.keystore")
            keyAlias project.hasProperty("releaseKeystoreKeyAlias") ? project.property("releaseKeystoreKeyAlias") : "releasekey"
            storePassword project.hasProperty("releaseKeystoreStorePassword") ? project.property("releaseKeystoreStorePassword") : "oauhkn"
            keyPassword project.hasProperty("releaseKeystoreKeyPassword") ? project.property("releaseKeystoreKeyPassword") : "oauhkn"
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }
        debug {
            signingConfig signingConfigs.debug
        }
        release {
            signingConfig signingConfigs.release
            signingConfig signingConfigs.release
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    lint {
        baseline = file("lint-baseline.xml")
    }

    lint {
        baseline = file("lint-baseline.xml")
    }
}

repositories {
    flatDir {
        dirs 'libs'
    }
    flatDir {
        dirs 'libs'
    }
}

dependencies {
    implementation project(':capacitor-android')
    implementation project(':capacitor-cordova-android-plugins')
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "androidx.appcompat:appcompat:1.7.0"
    implementation "androidx.coordinatorlayout:coordinatorlayout:1.2.0"
    implementation "androidx.core:core-splashscreen:1.0.1"
    implementation 'androidx.lifecycle:lifecycle-viewmodel:2.8.6'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.8.6'
    implementation 'com.google.android.gms:play-services-wallet:19.4.0'
    testImplementation "junit:junit:4.13.2"
    androidTestImplementation "androidx.test.ext:junit:1.2.1"
    androidTestImplementation "androidx.test.espresso:espresso-core:3.6.1"
    implementation 'com.google.firebase:firebase-messaging:24.0.0'
    implementation("com.microsoft.identity.client:msal:5.1.0") {
        exclude(group: "io.opentelemetry")
        exclude(group: 'com.microsoft.device.display')
    }
    implementation("io.opentelemetry:opentelemetry-api:1.34.1")
    implementation("io.opentelemetry:opentelemetry-context:1.34.1")
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "androidx.appcompat:appcompat:1.7.0"
    implementation "androidx.coordinatorlayout:coordinatorlayout:1.2.0"
    implementation "androidx.core:core-splashscreen:1.0.1"
    implementation 'androidx.lifecycle:lifecycle-viewmodel:2.8.6'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.8.6'
    implementation 'com.google.android.gms:play-services-wallet:19.4.0'
    testImplementation "junit:junit:4.13.2"
    androidTestImplementation "androidx.test.ext:junit:1.2.1"
    androidTestImplementation "androidx.test.espresso:espresso-core:3.6.1"
    implementation 'com.google.firebase:firebase-messaging:24.0.0'
    implementation("com.microsoft.identity.client:msal:5.1.0") {
        exclude(group: "io.opentelemetry")
        exclude(group: 'com.microsoft.device.display')
    }
    implementation("io.opentelemetry:opentelemetry-api:1.34.1")
    implementation("io.opentelemetry:opentelemetry-context:1.34.1")
}

apply from: 'capacitor.build.gradle'

try {
    def servicesJSON = file('google-services.json')
    if (servicesJSON.text) {
        apply plugin: 'com.google.gms.google-services'
        apply plugin: 'com.google.gms.google-services'
    }
} catch(Exception e) {
    logger.info("google-services.json not found, google-services plugin not applied. Push Notifications won't work")
}